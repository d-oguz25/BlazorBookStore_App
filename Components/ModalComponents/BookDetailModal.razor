@using BlazorBookStore_App.Components.Models
@using SERVICE.Contracts
@inject ICommentUserEngine commentEngine

@if(SelectedBook!=null){
    <div class="modal fade show d-block" tabindex="-1" style="background-color: rgba(0, 0, 0, 0.5);">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">@SelectedBook.Title</h5>
                    <button type="button" class="btn-close" aria-label="Close" @onclick="CloseModal"></button>
                </div>
                <div class="modal-body">
                    <img src="@SelectedBook.ImageUrl" class="img-fluid mb-3" alt="@SelectedBook.Title" />
                    <p><strong>Author:</strong> @SelectedBook.Author</p>
                    <p>@SelectedBook.Description</p>
                    <div>
                        @if(CommentList.Any()){
                            @foreach (var comment in CommentList.OrderByDescending(x => x.AddingTime))
                            {
                                <p> @comment.Content</p>
                                <p> @comment.User</p>
                                <p> @comment.AddingTime</p>
                            }
                        }
                        
                    </div> 
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" @onclick="CloseModal">Close</button>
                </div>
            </div>
        </div> 
    </div>
}

@code {
    [Parameter]
    public Book SelectedBook { get; set; }
    public List<Comment>? CommentList { get; set; }
    public EventCallback OnClose { get; set; }
    public async Task CloseModal()
    {
        await OnClose.InvokeAsync();
    }
    protected async override Task OnInitializedAsync()
    {
        CommentList = await commentEngine.GetComments(SelectedBook.Id);
       
        base.OnInitialized();
    }
}